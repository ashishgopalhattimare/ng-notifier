{"version":3,"file":"techpleiad-notifier.js","sources":["../../../projects/notifier/src/lib/models/Notification.config.ts","../../../projects/notifier/src/lib/notifier.component.ts","../../../projects/notifier/src/lib/notifier.service.ts","../../../projects/notifier/src/lib/notifier.module.ts","../../../projects/notifier/src/public-api.ts","../../../projects/notifier/src/techpleiad-notifier.ts"],"sourcesContent":["export enum NotificationStatus {\n    SUCCESS,\n    FAILED,\n    WARNING,\n    ERROR,\n    INFO\n}\nexport interface NotificationTime {\n    SUCCESS: number;\n    FAILED: number;\n}\nexport const NOTIFICATION_TIME: NotificationTime = {\n    SUCCESS: 3000,\n    FAILED: 4000\n}","import { AfterViewInit, ChangeDetectionStrategy, Component, Inject, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { BehaviorSubject } from 'rxjs';\nimport { NotificationStatus } from './models/Notification.config';\nimport { NotificationData } from './models/NotificationData';\n\n@Component({\n  selector: 'lib-notifier',\n  templateUrl: './notifier.component.html',\n  styleUrls: ['./notifier.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotifierComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('success', { read: TemplateRef }) successInstance: TemplateRef<any> | undefined;\n  @ViewChild('warning', { read: TemplateRef }) warningInstance: TemplateRef<any> | undefined;\n  @ViewChild('error', { read: TemplateRef }) errorInstance: TemplateRef<any> | undefined;\n  @ViewChild('info', { read: TemplateRef }) infoInstance: TemplateRef<any> | undefined;\n\n  notifTemplate$ = new BehaviorSubject<TemplateRef<any> | undefined>(undefined);\n  HIDE_TIMEOUT = 10;\n\n  constructor(\n    private snackRef: MatSnackBarRef<NotifierComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: NotificationData\n  ) { }\n\n  ngOnInit(): void {}\n  ngAfterViewInit(): void {\n    this.notifTemplate$.next(this.getTemplate());\n  }\n\n  close(): void {\n    this.snackRef.dismiss();\n  }\n\n  getTemplate(): TemplateRef<any> | undefined {\n    switch (this.data.status) {\n      case NotificationStatus.SUCCESS: return this.successInstance;\n      case NotificationStatus.INFO: return this.infoInstance;\n      case NotificationStatus.FAILED:\n      case NotificationStatus.ERROR: return this.errorInstance;\n      case NotificationStatus.WARNING: return this.warningInstance;\n    }\n    return undefined;\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { NotificationStatus, NotificationTime } from './models/Notification.config';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { NotifierComponent } from './notifier.component';\n\ntype NotificationError = {\n  errorCode: string;\n  errorMessages: string;\n  timestamp: number;\n  details: ErrorDetails[];\n}\ntype ErrorDetails = {\n  field: string;\n  message: string;\n}\n\n@Injectable()\nexport class NotifierService {\n\n  private horizontalPosition: MatSnackBarHorizontalPosition = 'right';\n  private verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(\n    @Inject('NOTIFICATION_TIME') private notificationTime: NotificationTime,\n    private snackBar: MatSnackBar\n  ) {\n    console.log('notif service created');\n  }\n\n  showNotificationV1(messageList: string[], status: boolean, title?: string): void {\n    this.builder(messageList,\n      status ? NotificationStatus.SUCCESS : NotificationStatus.ERROR, \n      title\n    );\n  }\n\n  showNotificationV2(messageList: string[], status: NotificationStatus, title?: string): void {\n    this.builder(messageList, status, title);\n  }\n\n  private builder(messageList: string[], status: NotificationStatus, title?: string): void {\n    this.snackBar.openFromComponent(NotifierComponent, {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: this.getNotifDuration(status),\n      data: {\n        message: messageList,\n        status,\n        title\n      }\n    });\n  }\n\n  getNotifDuration(status: NotificationStatus): number {\n    switch (status) {\n      case NotificationStatus.SUCCESS:\n      case NotificationStatus.INFO:\n        return this.notificationTime.SUCCESS;\n\n      case NotificationStatus.WARNING:\n      case NotificationStatus.FAILED:\n      case NotificationStatus.ERROR:\n        return this.notificationTime.FAILED;\n      default:\n        return this.notificationTime.FAILED;\n    }\n  }\n\n  getMessageListFromError(error: NotificationError): string[] {\n    return [error?.errorMessages || ''].concat(\n      error?.details?.map(x => `${x.field ? `${x.field}: ` : ''} ${x.message}`) || []\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotifierComponent } from './notifier.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { NOTIFICATION_TIME } from './models/Notification.config';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NotifierService } from './notifier.service';\n\n@NgModule({\n  declarations: [ NotifierComponent ],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatSnackBarModule,\n    MatIconModule\n  ],\n  exports: [ ],\n  providers: [\n    NotifierService,\n    { provide: 'NOTIFICATION_TIME', useValue: NOTIFICATION_TIME }\n  ]\n})\nexport class NotifierModule { }\n","/*\n * Public API Surface of notifier\n */\n\nexport * from './lib/notifier.service';\nexport * from './lib/notifier.component';\nexport * from './lib/notifier.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NOTIFICATION_TIME as ɵb,NotificationTime as ɵa} from './lib/models/Notification.config';\nexport {NotificationData as ɵc} from './lib/models/NotificationData';"],"names":[],"mappings":"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"}